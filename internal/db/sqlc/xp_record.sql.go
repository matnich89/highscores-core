// Code generated by sqlc. DO NOT EDIT.
// source: xp_record.sql

package db

import (
	"context"
	"time"
)

const createXpRecord = `-- name: CreateXpRecord :one
INSERT INTO xp_records (
    skill,
    character_id,
    last_xp_count,
    last_level,
    last_position,
    updated_at,
    created_at
) VALUES (
      $1,$2,$3,$4,$5,$6,$7
)
RETURNING id, skill, character_id, last_xp_count, last_level, last_position, updated_at, created_at
`

type CreateXpRecordParams struct {
	Skill        string
	CharacterID  int64
	LastXpCount  int64
	LastLevel    int32
	LastPosition int64
	UpdatedAt    time.Time
	CreatedAt    time.Time
}

func (q *Queries) CreateXpRecord(ctx context.Context, arg CreateXpRecordParams) (XpRecords, error) {
	row := q.db.QueryRowContext(ctx, createXpRecord,
		arg.Skill,
		arg.CharacterID,
		arg.LastXpCount,
		arg.LastLevel,
		arg.LastPosition,
		arg.UpdatedAt,
		arg.CreatedAt,
	)
	var i XpRecords
	err := row.Scan(
		&i.ID,
		&i.Skill,
		&i.CharacterID,
		&i.LastXpCount,
		&i.LastLevel,
		&i.LastPosition,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}

const getXpRecord = `-- name: GetXpRecord :one
SELECT id, skill, character_id, last_xp_count, last_level, last_position, updated_at, created_at FROM xp_records
WHERE skill = $1 AND character_id = $2
`

type GetXpRecordParams struct {
	Skill       string
	CharacterID int64
}

func (q *Queries) GetXpRecord(ctx context.Context, arg GetXpRecordParams) (XpRecords, error) {
	row := q.db.QueryRowContext(ctx, getXpRecord, arg.Skill, arg.CharacterID)
	var i XpRecords
	err := row.Scan(
		&i.ID,
		&i.Skill,
		&i.CharacterID,
		&i.LastXpCount,
		&i.LastLevel,
		&i.LastPosition,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}

const updateXpRecord = `-- name: UpdateXpRecord :one
UPDATE xp_records
SET last_xp_count = $3,
    last_level = $4,
    last_position = $5,
    updated_at = $6
WHERE character_id = $1 AND skill = $2
RETURNING id, skill, character_id, last_xp_count, last_level, last_position, updated_at, created_at
`

type UpdateXpRecordParams struct {
	CharacterID  int64
	Skill        string
	LastXpCount  int64
	LastLevel    int32
	LastPosition int64
	UpdatedAt    time.Time
}

func (q *Queries) UpdateXpRecord(ctx context.Context, arg UpdateXpRecordParams) (XpRecords, error) {
	row := q.db.QueryRowContext(ctx, updateXpRecord,
		arg.CharacterID,
		arg.Skill,
		arg.LastXpCount,
		arg.LastLevel,
		arg.LastPosition,
		arg.UpdatedAt,
	)
	var i XpRecords
	err := row.Scan(
		&i.ID,
		&i.Skill,
		&i.CharacterID,
		&i.LastXpCount,
		&i.LastLevel,
		&i.LastPosition,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}
